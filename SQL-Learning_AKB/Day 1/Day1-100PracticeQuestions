 Here are 100 SQL practice questions based on your table structure. 
The questions are divided into three levels:
**Easy (40)**, 
**Medium (40)**, and
**Hard (20)**. 

They cover the topics you mentioned: `SELECT`, `WHERE`, aggregation, filtering, `ORDER BY`, `GROUP BY`, and `HAVING`. The questions are designed to help you progressively build your SQL skills.

---

## Easy (1-40)

1. Select all columns from the table.

select * from orders;

2. Select only the `Order_ID` and `Customer_Name` columns.

select `Order_ID` , `Customer_Name` from orders;

3. Retrieve all unique `State` values.

select distinct state from orders;

4. Show all orders placed in the year 2020.

select * from orders where Order_Date like '2020%';

5. List all customers from the city "Los Angeles".

select * from orders where city ="Los Angeles";

6. Find all orders shipped via "Second Class".

select * from orders where Ship_Mode ="Second Class";

7. Select all orders where `Quantity` is greater than 5.

select * from orders where Quantity>=5

8. Display the first 10 rows of the table.

select * from orders limit 10;

9. List all orders where `Profit` is negative.

select * from orders where profit like '-%'

10. Show all orders where `Discount` is 0.

select * from orders where Discount=0

11. Find all orders from the "West" region.

select Region , count(*) as count_of_region from orders group by region

12. Retrieve all orders from "California" state.

select * from orders where state='California';

13. Select all orders where `Sales` is greater than 500.

select * from Orders where `Sales`>500

14. List all orders placed by "Claire Gute".

select * from Orders where Customer_Name='Claire Gute'

15. Show all orders with `Ship_Mode` as "Standard Class".

select * from Orders where Ship_Mode="Standard Class"

16. Find all orders shipped after "2020-01-01".

select * from Orders where Ship_Date>"2020-01-01" order by Ship_Date


17. Display all orders with `Category` as "Furniture". 

select * from Orders where `Category` = "Furniture"

18. List all orders where `Sub_Category` is "Chairs".

select * from Orders where `Sub_Category`= "Chairs"


19. Show all orders where `Postal_Code` starts with "9".

select * from Orders where `Postal_Code` like "9%"

20. Find all orders where `Order_Date` is before "2019-01-01".

select * from Orders where `Order_Date` < "2019-01-01" order by Order_Date

21. Select all orders where `Country_Region` is "United States".

select * from Orders where `Country_Region` = "United States"

22. List all customers who belong to the "Consumer" segment.

select * from Orders where Segment ="Consumer" 

23. Show all orders where `Sales` is between 100 and 200.

select * from Orders where `Sales` between 100 and 200


24. Display all orders where `Product_Name` contains the word "Table".

select * from Orders where `Product_Name` like "%Table%"

25. List all orders where `Quantity` is less than 3.

select * from Orders where `Quantity` < 3


26. Find all orders shipped to "Texas".

select * from Orders where State = "Texas"

27. Select all orders where `Order_ID` starts with "CA".

select * from Orders where `Order_ID` like "CA%"

28. Show all orders where `Profit` is greater than 100.

select * from Orders where `Profit` > 100

29. List all orders where `Ship_Date` is the same as `Order_Date`.

select * from Orders where `Ship_Date`= `Order_Date`

30. Display all orders where `Discount` is not 0.

select * from Orders where `Discount` != 0

31. Find all orders where `Category` is not "Technology".

select * from Orders where `Category` != "Technology"

32. Select all orders where `Region` is "South".

select * from Orders where `Region` = "South"

33. List all orders where `Customer_Name` starts with "A".

select * from Orders where `Customer_Name` like "A%"

34. Show all orders where `Product_ID` ends with "25".

select * from Orders where `Product_ID` like "%25"

35. Find all orders where `Order_Date` is in June.

select * from Orders where `Order_Date` like '_____06%'

36. Display all orders with `Sales` less than 50.

select * from Orders where `Sales` < 50

37. List all orders where `State` is "Florida".

select * from Orders where `State` = "Florida"

38. Show all orders where `Order_ID` contains "2018".

select * from Orders where `Order_ID` like "%2018%"

39. Find all orders where `Profit` is less than 0.

select * from Orders where `Profit` < 0

40. Select all orders where `Ship_Mode` is not "First Class".

select * from Orders where `Ship_Mode` != "First Class"

---

## Medium (41-80)

41. Count the total number of orders.

select count(*) from Orders 

42. Find the total sales for each `State`.

select sum(Sales) as total_sale,state from orders group by State order by total_sale ,state

107.9400	Kansas
205.0300	Vermont
361.3800	Nebraska
547.3300	Maine
728.3000	Iowa

43. Calculate the average `Profit` for each `Category`.

select avg(profit) as Average_Profit, Category from orders group by Category
or
select avg(profit) as Average_Profit, Category from orders group by Category order by Category,Average_Profit

44. List the top 5 customers with the highest total sales.

select sum(sales) as total_sales,customer_name from orders group by customer_name order by total_sales desc limit 5

45. Find the total quantity sold for each `Product_ID`.

select sum(Quantity) as total_quantity_sold, Product_ID from orders group by Product_ID order by total_quantity_sold

46. Show the number of orders for each `Ship_Mode`.

select count(Order_ID) as Total_Order ,Ship_Mode from Orders group by Ship_Mode order by Total_Order

47. Calculate the total profit for each `Region`.

select sum(Profit) as total_profit, Region from Orders group by Region order by total_profit

48. List the total sales for each month in 2020.

select sum(sales) as total_sales , month(Order_Date) as Monthly_data from orders group by Monthly_data order by Monthly_data

select sum(sales) as total_sales , month(Order_Date) as Monthly_data from orders
where Order_Date like '%2020%'
group by Monthly_data order by Monthly_data

49. Find the average discount given for each `Sub_Category`.

select avg(discount) as average_discount, Sub_Category from orders group by Sub_Category order by average_discount ,Sub_Category


50. Show the total number of orders for each `Segment`.

select count(Order_ID) as total_number_of_order , Segment from orders group by Segment order by total_number_of_order

51. List the top 3 states with the highest sales.

select sum(sales) as highest_sale , state from orders group by state order by highest_sale desc limit 5

52. Find the customer with the highest total profit.

select sum(profit) as Total_Profit , Customer_Name from orders group by Customer_Name order by Total_Profit desc limit 5

53. Show the average sales per order for each `Category`.

select avg(sales) as average_sales, Category from orders group by Category order by average_sales

54. List all products that have been sold more than 10 times.

SELECT Product_Name, SUM(Quantity) AS Total_Quantity_Sold
FROM orders
GROUP BY Product_Name
HAVING SUM(Quantity) > 10
ORDER BY Total_Quantity_Sold DESC;


55. Find the total sales for each `City` in "California".

select sum(sales) as total_sales , city from orders where state ="California" group by city order by total_sales


56. Show the number of unique customers in each `Region`.

select count(distinct Customer_name) as unique_customers, Region from orders group by Region 

57. List the total profit for each `Ship_Mode`.

select sum(profit) as total_profit, Ship_Mode from orders group by Ship_Mode order by Ship_Mode

58. Find the average quantity per order for each `Sub_Category`.

SELECT AVG(quantity) AS average_quantity, Sub_Category
FROM orders
GROUP BY Sub_Category;


59. Show the total sales for each year.

SELECT SUM(sales) AS yearly_Sales, YEAR(Order_date) AS year_of_order
FROM orders
GROUP BY year_of_order;


60. List the top 5 products by sales.

select Product_Name, sum(Sales) as total_sales from orders group by Product_Name order by total_sales desc limit 5

61. Find the state with the lowest total profit.

select sum(profit) as total_profit , state from orders group by state order by total_profit asc limit 1

62. Show the average discount per customer.

select avg(discount) as average_discount ,Customer_Name from orders group by Customer_Name 

63. List the total quantity sold for each `Category`.

SELECT SUM(Quantity) AS total_Quantity, Category
FROM orders
GROUP BY Category
ORDER BY total_Quantity;


64. Find the month with the highest sales in 2020.


65. Show the number of orders for each `Product_ID`.
66. List the total profit for each `Customer_ID`.
67. Find the top 3 cities by total sales.
68. Show the average sales for each `Ship_Mode`.
69. List the total sales for each `Region` and `Category`.
70. Find the customer with the most orders.
71. Show the number of orders placed in each year.
72. List the average profit per order for each `State`.
73. Find the top 5 customers by total quantity purchased.
74. Show the total sales and profit for each `Category`.
75. List the number of orders for each `Sub_Category`.
76. Find the average quantity per order for each `Segment`.
77. Show the total sales for each `Product_Name`.
78. List the top 3 products by total quantity sold.
79. Find the state with the highest average sales per order.
80. Show the average discount for each `Region`.

---

## Hard (81-100)

81. List the top 5 customers in each region by total sales.
82. Find the product with the highest profit margin (Profit/Sales).
83. Show the month-on-month sales growth for 2020.
84. List the top 3 categories by average profit per order.
85. Find all customers who have placed more than 5 orders.
86. Show the top 5 cities by total profit in each state.
87. List all products that have never been sold with a discount.
88. Find the average sales per customer for each segment.
89. Show the percentage of total sales contributed by each category.
90. List the customers who have purchased from more than one segment.
91. Find the top 3 states with the highest average discount.
92. Show the total profit for each product in each region.
93. List the top 5 products by sales in each year.
94. Find all orders where the sales amount is above the average sales for that year.
95. Show the average profit per order for each ship mode and category.
96. List all customers who have only placed orders in 2019.
97. Find the product with the highest total quantity sold in each category.
98. Show the total sales and profit for each customer in each year.
99. List the top 3 sub-categories by total profit in each region.
100. Find all orders where the profit is less than the average profit for that sub-category.

---

**Happy practicing!** 



Here are 20 additional hard SQL practice questions, designed to challenge your advanced skills using the provided table structure. These questions focus on advanced querying, aggregation, filtering, grouping, and ordering, as well as scenarios that require creative or multi-step solutions.

---

## 20 More Hard SQL Questions

1. Find the top 3 customers in each segment by total profit, and display their names, segment, and profit.
2. For each year, list the product category with the highest average discount.
3. Identify all orders where the shipping time (difference between Ship_Date and Order_Date) is greater than the average shipping time for that year.
4. List all customers who have placed orders in every year present in the data.
5. For each state, find the product sub-category with the lowest total sales.
6. Show the running total of sales for each region, ordered by Order_Date.
7. For each customer, display the largest single order (by sales amount) they have placed.
8. Find the average profit per order for each combination of Ship_Mode and Segment, but only include combinations with at least 10 orders.
9. Identify all products that have never been sold with a discount greater than 0.2.
10. For each city, find the month with the highest total sales and display the city, month, and sales.
11. List all orders where the sales amount is more than twice the average sales for that product’s sub-category.
12. For each region, show the percentage of orders that had a negative profit.
13. List customers who have ordered from more than three different product categories.
14. For each year, find the state with the highest total quantity sold.
15. Show the top 5 orders (by sales) in each category for the most recent year in the data.
16. For each customer, calculate the time difference (in days) between their first and last order.
17. List all orders where the profit is the lowest for that product in the entire dataset.
18. For each segment, show the product with the highest average sales per order.
19. Identify all orders where the customer’s total profit across all orders is negative.
20. For each region and year, find the average shipping time and list the three cities with the slowest average shipping times.

---

These questions will push your ability to use subqueries, window functions, complex aggregations, and advanced filtering. Good luck with your practice!

Citations:
[1] https://www.codechef.com/learn/course/sql-intermediate
[2] https://datalemur.com/blog/advanced-sql-interview-questions
[3] https://www.reddit.com/r/SQL/comments/s3kcjf/looking_for_advanced_sql_exercises_to_brush_up/
[4] https://upesonline.ac.in/blog/advanced-sql-interview-questions
[5] https://www.geeksforgeeks.org/sql-exercises/
[6] https://365datascience.com/resources-center/practice-exams/advanced-sql/
[7] https://learnsql.com/blog/advanced-sql-practice/
[8] https://www.kaggle.com/learn/advanced-sql
[9] https://leetcode.com/studyplan/premium-sql-50/

---
